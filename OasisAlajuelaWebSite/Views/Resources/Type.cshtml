@model PagedList.IPagedList<ET.Resources>
@using PagedList.Mvc;
@using System.Globalization;

@{
    ViewBag.Title = ViewBag.Resource;
    Layout = ViewBag.Layout;
}
    <script type="text/javascript">
    function AddNew() {
            var url = '@Url.Action("AddNewResource", new { id = ViewBag.ResourceTypeID })';
            window.open(url, '_blank', 'left=100,top=100,width=1000,height=650,toolbar=1,resizable=0');
        }
    </script>

    <section class="hp-section">
        <div class="container">
            <div class="row justify-content-center border-bottom mb-2">
                <h2 class="heading-section font-weight-bold my-2 p-0">@ViewBag.Title</h2>
            </div>
            @using (Html.BeginForm("Type", "Resources", FormMethod.Get))
            {
                <div class="row justify-content-start">
                    <div class="form-group input-group p-0 searchfield w-50">
                        <div class="input-group-prepend">
                            <span class="input-group-text w"><i class="fas fa-search"></i></span>
                        </div>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", @placeholder = "Palabra clave" })
                    </div>
                    <input type="submit" value="Buscar" class="btn btn-dark alt mt-0 mb-2" style="height: 2.75rem !important;" />
                </div>
            }
            <div class="row justify-content-start">
                <div class="px-0">
                    <div class="media services d-block text-justify">
                        <div class="media-body px-0 m-0">
                            <div class="d-flex justify-content-between">
                                <a href='#' title="Agregar Recurso" class="btn btn-light" style="text-decoration: none;" onclick="AddNew()"><i class="fas fa-plus-square fa-1x"></i> Agregar Recurso</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @foreach (var item in Model)
            {
                var modalname = "ModalCenter" + item.ResourceID.ToString();

                switch (item.FileType)
                {
                    case "URL":
                        <p>video desde youtube</p>
                        break;
                    case "Video":
                        <p>Video</p>
                        break;
                    case "Audio":
                        <p>audio</p>
                        break;
                    default:
                        <p>documento</p>
                        break;
                }
            }
            <div class="row justify-content-start">
                @if (Model.PageCount > 1)
                {
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions() { ContainerDivClasses = new string[] { "p-0" }, UlElementClasses = new string[] { "pagination m-0" } })
                }
            </div>
        </div>
    </section>

