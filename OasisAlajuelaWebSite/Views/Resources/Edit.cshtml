@model ET.Resources

@{
    ViewBag.Title = "Editar Recurso";
    Layout = "~/Views/Shared/_PupopLayout.cshtml";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var flag = '@(Model.ActionType)';
        if (flag == "UPDATE")
        {
            opener.location.reload();
            window.close();
        }
    });
</script>

<div class="card bg-light">
    <article class="card-body mx-5" style="max-width: 100%;">
        <h2 class="heading-section font-weight-bold m-0 p-0">@ViewBag.Title</h2>
        @using (Html.BeginForm("Edit", "Resources", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ResourceID)
            @Html.HiddenFor(model => model.FileType)
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger m-0" })
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ResourceTypeID, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                            <div class="col">
                                @Html.DropDownListFor(model => model.ResourceTypeID, new SelectList(Model.TypeList, "ResourceTypeID", "TypeName"), new { @class = "custom-select" })
                                @Html.ValidationMessageFor(model => model.ResourceTypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                            <div class="col">
                                @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                            <div class="col">
                                @Html.TextAreaFor(model => model.Description, 5, 1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (Model.FileURL.Length > 0)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.FileURL, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                                <div class="col">
                                    @Html.EditorFor(model => model.FileURL, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FileURL, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-2 col-md-10 mx-3">
                        <input type="submit" value="Guardar" class="btn btn-dark alt mt-0 mb-2" />
                        <input type="button" value="Cancelar" class="btn btn-dark alt mt-0 mb-2" onclick="javascript: window.close();" />
                    </div>
                </div>
            </div>
        }
    </article>
</div>