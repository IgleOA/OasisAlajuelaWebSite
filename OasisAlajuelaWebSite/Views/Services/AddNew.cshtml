@model ET.Services

@{
    ViewBag.Title = "Servicios";
    Layout = "~/Views/Shared/_PupopLayout.cshtml";
}

<script src="~/Scripts/jquery-3.5.0.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var flag = '@(Model.ActionType)';
        if (flag == "CREATE")
        {
            opener.location.reload();
            window.close();
        }
    });

    function Search() {
        var url = 'https://fontawesome.com/icons?d=gallery';
        window.open(url, '_blank', 'left=100,top=100,width=1000,height=650,toolbar=1,resizable=0');
    }
</script>
<div class="col text-center heading-section ftco-animate animated fadeInUp">
    <h2 class="mb-0 mt-3"><span class="px-4">@ViewBag.Title</span></h2>
    <span class="subheading">Agregar Nuevo Servicio</span>
</div>
<div class="ftco-animate animated fadeInUp">
    <article class="card-body py-0">
        @using (Html.BeginForm("AddNew", "Services", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger m-0" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ServiceName, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ServiceDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ServiceDescription, 5, 1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10 d-flex justify-content-between">
                        @Html.LabelFor(model => model.ServiceIcon, htmlAttributes: new { @class = "control-label m-0", @style = "float: left;" })
                        <a href="#" onclick="Search();" title="Buscar Icono"><i class="fas fa-search"></i></a>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ServiceIcon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceIcon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ControllerLink, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ControllerLink, new { htmlAttributes = new { @class = "form-control", placeholder = "Si aplica" } })
                        @Html.ValidationMessageFor(model => model.ControllerLink, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ActionLink, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActionLink, new { htmlAttributes = new { @class = "form-control", placeholder = "Si aplica" } })
                        @Html.ValidationMessageFor(model => model.ActionLink, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2", @style = "max-width: 100%;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-dark alt mt-0 mb-2" />
                        <input type="button" value="Cancelar" class="btn btn-dark alt mt-0 mb-2" onclick="javascript: window.close();" />
                    </div>
                </div>
            </div>
        }
    </article>
</div>

